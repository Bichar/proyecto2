/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package app.view;

import app.dao.UserDao;
import app.model.Usuario;
import java.util.List;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jvazq
 */
public class UsuariosPanel extends javax.swing.JPanel {

    /**
     * Creates new form usuariosPanel
     */
    public UsuariosPanel() {
        initComponents();
        
        
         ListSelectionModel cellSelectionModel = tablaUsuarios.getSelectionModel();
    cellSelectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
     UserDao userDao = new UserDao();
     //DeptoDao deptodao = new DeptoDao();
        
cellSelectionModel.addListSelectionListener(new ListSelectionListener() {
  public void valueChanged(ListSelectionEvent e) {
    String selectedData = null;

    int[] selectedRow = tablaUsuarios.getSelectedRows();
    int[] selectedColumns = tablaUsuarios.getSelectedColumns();

    for (int i = 0; i < selectedRow.length; i++) {
        
        nombre.setText( tablaUsuarios.getValueAt(selectedRow[i], 0)+"");
        nombre.repaint();
        ApellidoPa.setText( tablaUsuarios.getValueAt(selectedRow[i], 1)+"");
        ApellidoPa.repaint();
        ApellidoMa.setText( tablaUsuarios.getValueAt(selectedRow[i], 2)+"");
        ApellidoMa.repaint();
        Contrasena.setText( tablaUsuarios.getValueAt(selectedRow[i], 3)+"");
        Contrasena.repaint();
        Rol.setText( tablaUsuarios.getValueAt(selectedRow[i], 4)+"");
        Rol.repaint();
        Usuario.setText( tablaUsuarios.getValueAt(selectedRow[i], 5)+"");
        Usuario.repaint();
        id.setText( tablaUsuarios.getValueAt(selectedRow[i], 6)+"");
        id.repaint();

    }
    }
     });

 userDao = new UserDao();  
        List<Usuario> usuarios=userDao.buscaUsuarios();
        int row=0;
        
        for(Usuario usuario: usuarios){
            tablaUsuarios.getModel().setValueAt(usuario.getNombre(), row, 0);
            tablaUsuarios.getModel().setValueAt(usuario.getApellidoPa(), row, 1);
            tablaUsuarios.getModel().setValueAt(usuario.getApellidoMa(), row, 2);
            tablaUsuarios.getModel().setValueAt(usuario.getContrasena(), row, 3);
            tablaUsuarios.getModel().setValueAt(usuario.getRolId(), row, 4);
            tablaUsuarios.getModel().setValueAt(usuario.getUsuario(), row, 5);
            tablaUsuarios.getModel().setValueAt(usuario.getIdUsuario(), row, 6);
           
            row++;
        }

        this.tablaUsuarios.repaint();
        this.tablaUsuarios.revalidate();

        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        nombre = new javax.swing.JTextField();
        ApellidoPa = new javax.swing.JTextField();
        ApellidoMa = new javax.swing.JTextField();
        Contrasena = new javax.swing.JTextField();
        Rol = new javax.swing.JTextField();
        Usuario = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaUsuarios = new javax.swing.JTable();
        Actualizar = new javax.swing.JButton();
        Crear = new javax.swing.JButton();
        Borrar = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        id = new javax.swing.JLabel();

        jButton1.setText("Actualizar");

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Yu Gothic Medium", 0, 18)); // NOI18N
        jLabel1.setText("Usuarios");

        jLabel2.setText("Nombre ");

        jLabel3.setText("Apellido paterno ");

        jLabel4.setText("Apellido materno");

        jLabel5.setText("Contraseña");

        jLabel6.setText("Rol");

        jLabel7.setText("Usuario");

        tablaUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Nombre", "ApellidoPa", "ApellidoMa", "Contraseña", "Rol", "Usuario", "Id"
            }
        ));
        jScrollPane1.setViewportView(tablaUsuarios);

        Actualizar.setText("Actualizar");
        Actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActualizarActionPerformed(evt);
            }
        });

        Crear.setText("Crear");
        Crear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CrearActionPerformed(evt);
            }
        });

        Borrar.setText("Borrar");
        Borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BorrarActionPerformed(evt);
            }
        });

        jLabel8.setText("Id");

        id.setText("Id");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(id)
                                .addGap(82, 82, 82)
                                .addComponent(jLabel1)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(nombre, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                                    .addComponent(ApellidoPa)
                                    .addComponent(ApellidoMa)
                                    .addComponent(Contrasena)
                                    .addComponent(Rol)
                                    .addComponent(Usuario))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(151, 151, 151)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(Actualizar)
                                            .addComponent(Crear))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(Borrar)))
                                .addContainerGap(144, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 586, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 105, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Actualizar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(ApellidoPa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Crear))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(ApellidoMa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Borrar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(Contrasena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(Rol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(Usuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void CrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CrearActionPerformed
        // TODO add your handling code here:
        UserDao userDao = new UserDao();
      
         
        userDao.insertaRegistro(
                 this.ApellidoMa.getText(),
                this.ApellidoPa.getText(),
                this.nombre.getText(),
                Integer.parseInt(this.Rol.getText()), 
                this.Usuario.getText(), 
                this.Contrasena.getText());
      
         List<Usuario> usuarios=userDao.buscaUsuarios();
        int row=0;
        
        for(Usuario usuario: usuarios){
            tablaUsuarios.getModel().setValueAt(usuario.getNombre(), row, 0);
            tablaUsuarios.getModel().setValueAt(usuario.getApellidoPa(), row, 1);
            tablaUsuarios.getModel().setValueAt(usuario.getApellidoMa(), row, 2);
            tablaUsuarios.getModel().setValueAt(usuario.getContrasena(), row, 3);
            tablaUsuarios.getModel().setValueAt(usuario.getRolId(), row, 4);
            tablaUsuarios.getModel().setValueAt(usuario.getUsuario(), row, 5);
            tablaUsuarios.getModel().setValueAt(usuario.getIdUsuario(), row, 6);
           
            row++;
        }

        this.tablaUsuarios.repaint();
        this.tablaUsuarios.revalidate();

        
    }//GEN-LAST:event_CrearActionPerformed

    private void ActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActualizarActionPerformed
        UserDao userDao = new UserDao();
      
         
        userDao.updateRegistro(
                 this.ApellidoMa.getText(),
                this.ApellidoPa.getText(),
                this.nombre.getText(),
                Integer.parseInt(this.Rol.getText()), 
                this.Usuario.getText(), 
                this.Contrasena.getText(),
                Integer.parseInt(id.getText()));
      
         List<Usuario> usuarios=userDao.buscaUsuarios();
        int row=0;
        
        for(Usuario usuario: usuarios){
            tablaUsuarios.getModel().setValueAt(usuario.getNombre(), row, 0);
            tablaUsuarios.getModel().setValueAt(usuario.getApellidoPa(), row, 1);
            tablaUsuarios.getModel().setValueAt(usuario.getApellidoMa(), row, 2);
            tablaUsuarios.getModel().setValueAt(usuario.getContrasena(), row, 3);
            tablaUsuarios.getModel().setValueAt(usuario.getRolId(), row, 4);
            tablaUsuarios.getModel().setValueAt(usuario.getUsuario(), row, 5);
            tablaUsuarios.getModel().setValueAt(usuario.getIdUsuario(), row, 6);
           
            row++;
        }

        this.tablaUsuarios.repaint();
        this.tablaUsuarios.revalidate();
    }//GEN-LAST:event_ActualizarActionPerformed

    private void BorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BorrarActionPerformed
        // TODO add your handling code here:
        
        UserDao userDao = new UserDao();
      
         
        userDao.deletRegistro(
                Integer.parseInt(id.getText()));
      
        
         DefaultTableModel dm = (DefaultTableModel) tablaUsuarios.getModel();
int rowCount = dm.getRowCount();
//Remove rows one by one from the end of the table
for (int i = rowCount - 1; i >= 0; i--) {
     tablaUsuarios.getModel().setValueAt("", i, 0);
            tablaUsuarios.getModel().setValueAt("", i, 1);
            tablaUsuarios.getModel().setValueAt("", i, 2);
            tablaUsuarios.getModel().setValueAt("", i, 3);
            tablaUsuarios.getModel().setValueAt("", i, 4);
            tablaUsuarios.getModel().setValueAt("", i, 5);
            tablaUsuarios.getModel().setValueAt("", i, 6);
}
        
        
         List<Usuario> usuarios=userDao.buscaUsuarios();
         
        int row=0;
        
        for(Usuario usuario: usuarios){
            tablaUsuarios.getModel().setValueAt(usuario.getNombre(), row, 0);
            tablaUsuarios.getModel().setValueAt(usuario.getApellidoPa(), row, 1);
            tablaUsuarios.getModel().setValueAt(usuario.getApellidoMa(), row, 2);
            tablaUsuarios.getModel().setValueAt(usuario.getContrasena(), row, 3);
            tablaUsuarios.getModel().setValueAt(usuario.getRolId(), row, 4);
            tablaUsuarios.getModel().setValueAt(usuario.getUsuario(), row, 5);
            tablaUsuarios.getModel().setValueAt(usuario.getIdUsuario(), row, 6);
           
            row++;
        }

        this.tablaUsuarios.repaint();
        this.tablaUsuarios.revalidate();
    }//GEN-LAST:event_BorrarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Actualizar;
    private javax.swing.JTextField ApellidoMa;
    private javax.swing.JTextField ApellidoPa;
    private javax.swing.JButton Borrar;
    private javax.swing.JTextField Contrasena;
    private javax.swing.JButton Crear;
    private javax.swing.JTextField Rol;
    private javax.swing.JTextField Usuario;
    private javax.swing.JLabel id;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nombre;
    private javax.swing.JTable tablaUsuarios;
    // End of variables declaration//GEN-END:variables
}
