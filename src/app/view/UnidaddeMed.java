/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package app.view;



;

import javax.swing.table.DefaultTableModel;


import app.dao.UnidadmedDao;
import app.model.Unidaddemedida;
import java.util.List;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 
 */
public class UnidaddeMed extends javax.swing.JPanel {
    
     public UnidaddeMed() {
        initComponents();
        
        ListSelectionModel cellSelectionModel = tablaunidad.getSelectionModel();
    cellSelectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
     UnidadmedDao UnidadmedDao = new UnidadmedDao();
    
        
cellSelectionModel.addListSelectionListener(new ListSelectionListener() {
  public void valueChanged(ListSelectionEvent e) {
    String selectedData = null;

    int[] selectedRow = tablaunidad.getSelectedRows();
    int[] selectedColumns = tablaunidad.getSelectedColumns();

    for (int i = 0; i < selectedRow.length; i++) {
        id.setText( tablaunidad.getValueAt(selectedRow[i], 0)+"");
        id.repaint();
        tipomed.setText( tablaunidad.getValueAt(selectedRow[i], 1)+"");
        tipomed.repaint();      
       
           }
    }
     });

 UnidadmedDao = new UnidadmedDao();  
        List<Unidaddemedida> unidades=UnidadmedDao.buscaUnidades();
        int row=0;
        
        for(Unidaddemedida Unidaddemedida: unidades){
            tablaunidad.getModel().setValueAt(Unidaddemedida.getIdUm(), row, 0);
            tablaunidad.getModel().setValueAt(Unidaddemedida.getTipoDeMedida(), row, 1);
           
            row++;
        }

        this.tablaunidad.repaint();
        this.tablaunidad.revalidate();

    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        id = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tipomed = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaunidad = new javax.swing.JTable();
        modificar = new javax.swing.JButton();
        Eliminar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        jLabel1.setText("Unidad de Medida");

        jLabel2.setText("id um");

        id.setText("id");

        jLabel3.setText("Tipo de Medida");

        tipomed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipomedActionPerformed(evt);
            }
        });

        tablaunidad.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "id um", "Tipo de medida"
            }
        ));
        jScrollPane1.setViewportView(tablaunidad);

        modificar.setText("Modificar");
        modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarActionPerformed(evt);
            }
        });

        Eliminar.setText("Eliminar");
        Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarActionPerformed(evt);
            }
        });

        jButton1.setText("Agregar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Eliminar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(151, 151, 151)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(id)
                                    .addComponent(tipomed, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(modificar)
                            .addComponent(jButton1))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(id))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(tipomed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(modificar)
                        .addGap(21, 21, 21)
                        .addComponent(Eliminar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tipomedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipomedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tipomedActionPerformed

    private void modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarActionPerformed


 UnidadmedDao UnidadmedDao = new UnidadmedDao();
      
         
        UnidadmedDao.updateRegistro(
                this.tipomed.getText(),
                Integer.parseInt(id.getText()));                                          

      
         List<Unidaddemedida> unidades=UnidadmedDao.buscaUnidades();
        int row=0;
        
        for(Unidaddemedida Unidaddemedida: unidades){
            tablaunidad.getModel().setValueAt(Unidaddemedida.getIdUm(), row, 0);
            tablaunidad.getModel().setValueAt(Unidaddemedida.getTipoDeMedida(), row, 1);
            
           
            row++;
        }

        this.tablaunidad.repaint();
        this.tablaunidad.revalidate();
    }//GEN-LAST:event_modificarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        UnidadmedDao UnidadmedDao = new UnidadmedDao();
      
         
        UnidadmedDao.insertaRegistro(
                this.tipomed.getText());
                
      
         List<Unidaddemedida> unidades=UnidadmedDao.buscaUnidades();
        int row=0;
        
        for(Unidaddemedida Unidaddemedida: unidades){
            tablaunidad.getModel().setValueAt(Unidaddemedida.getIdUm(), row, 0);
            tablaunidad.getModel().setValueAt(Unidaddemedida.getTipoDeMedida(), row, 1);
            
           
            row++;
        }

        this.tablaunidad.repaint();
        this.tablaunidad.revalidate();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarActionPerformed
        // TODO add your handling code here:
        
        UnidadmedDao UnidadmedDao = new UnidadmedDao();
      
         
        UnidadmedDao.deletRegistro(
                Integer.parseInt(id.getText()));
      
        
         DefaultTableModel dm = (DefaultTableModel) tablaunidad.getModel();
int rowCount = dm.getRowCount();
//Remove rows one by one from the end of the table
for (int i = rowCount - 1; i >= 0; i--) {
            tablaunidad.getModel().setValueAt("", i, 0);
            tablaunidad.getModel().setValueAt("", i, 1);
}
        
        
        List<Unidaddemedida> unidades=UnidadmedDao.buscaUnidades();      
            int row=0;
        
        for(Unidaddemedida Unidaddemedida: unidades){
            tablaunidad.getModel().setValueAt(Unidaddemedida.getIdUm(), row, 0);
            tablaunidad.getModel().setValueAt(Unidaddemedida.getTipoDeMedida(), row, 1);
            row++;
        }

        this.tablaunidad.repaint();
        this.tablaunidad.revalidate();
    }//GEN-LAST:event_EliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Eliminar;
    private javax.swing.JLabel id;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton modificar;
    private javax.swing.JTable tablaunidad;
    private javax.swing.JTextField tipomed;
    // End of variables declaration//GEN-END:variables
}
